name: CI

on:
  push:

jobs:
  build:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4

      # Set up Rust
      - name: Setup Rust and Cargo
        uses: moonrepo/setup-rust@v1.2.0

      # Build
      - name: Build
        run: cargo build --release

      - name: Save release
        uses: actions/upload-artifact@v4
        with:
          name: tw-stash
          path: target/release/tw-stash

  test:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4

      # Set up Rust
      - name: Setup Rust and Cargo
        uses: moonrepo/setup-rust@v1.2.0

      # Test
      - name: Test
        run: cargo test

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust and Cargo
        uses: moonrepo/setup-rust@v1.2.0

      - name: Format
        run: cargo fmt --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust and Cargo
        uses: moonrepo/setup-rust@v1.2.0

      - name: Lint
        run: cargo clippy -- --deny warnings

  typos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@master

  containerize:
    runs-on: "ubuntu-latest"
    needs: [build, test, lint, typos]

    permissions:
      contents: read
      packages: write

    outputs:
      tag: ${{ steps.containerize.outputs.tag }}

    env:
      IMAGE_NAME: "ghcr.io/bytes-zone/tw-stash"
      REGISTRY: "ghcr.io"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: tw-stash
          path: tw-stash

      - id: containerize
        run: |
          TAG="$(sha256sum tw-stash | cut -f 1 -d ' ')"

          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

          docker build . --tag "${{ env.IMAGE_NAME }}:${TAG}"

      - name: Log into the container registry
        uses: docker/login-action@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push
        if: ${{ github.ref == 'refs/heads/main' }}
        run: docker push "${{ env.IMAGE_NAME }}:${{ steps.containerize.outputs.tag }}"

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: containerize
  #
  #   if: ${{ github.ref == 'refs/heads/main' }}
  #
  #   env:
  #     IMAGE_NAME: "ghcr.io/bytes-zone/tinyping-frontend"
  #     REGISTRY: "ghcr.io"
  #
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         repository: bytes-zone/infrastructure.v3
  #         ref: main
  #         ssh-key: ${{ secrets.DEPLOY_KEY }}
  #
  #     - name: update manifest
  #       run: |
  #         ./update-job-image-gha.sh tinyping "${{ env.IMAGE_NAME }}:${{ needs.containerize.outputs.tag }}"
